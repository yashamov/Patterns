Описание Архитектуры
ИНФОРМАЦИЯ УСТАРЕЛА!!! ЛИСТАТЬ ВНИЗ!

Пока сделаю текстовым файлом, когда будет рализовано больше игровой логики - будет uml!

Есть Интерфейс Hero
От него наследуется Class Hero Bahavior.
В этом классе описываются базовые вещи для экземпляров (воинов). Например вводится их здоровье, количество урона, наличие привилегий, живы ли они вообще, и методы с помощью которых они собственно теряют здоровье(когда их бьёт противник), получают привилегии (увеличение урона например) и направленность действия (например маги и волшебники могут либо нанести урон противнику, либо улучшить союзника за 1 ход)

Также есть интерфейс Team, который отвечает за сбор армии, жив ли кто-то из воинов и за очередность хода 

В классе Battle описано как происходит сражение между 2 бойцами из враждующих армий. Начинает команда 1 игрока. Продолжается до тех пор пока живы.

Есть 2 enum интерфейса HumanType и ElvesType которые используются для фабрик для создания воинов из фракций Людей или Эльфов

Есть 2 фракции: люди и эльфы
У каждой по 3 вида воинов: 
люди: воины (с мечами), арбалетчики и волшебники (warrior, arbalester и magician соответственно)
эльфы: Хоббиты (человекоподобные воины с мечаbe ми), лучники и маги

С помощью фабрик HumansFactory и ElvesFactory соответственно создаются воины присущие этим фракциям.

В Main в методе main происходит взаимодействие с консолью: выбор фракции, выбор (пока что только) 1 бойца. В конце вас поздравят с тем, что вы выбрали воина. 
Сделал "защиту от дурака", которая не даст возможности написать в консоль что-то, что не удовлетворяет условиям выбора

В дальнейшем можно будет реализовать исходное количество какой-то валюты, за которую можно будем нанимать бойцов. 
Будет сделан метод fight() (короче будут драться). Наложение улучшений на сокомандников, увеличение количества фракций и типов воинов, наложение чар на противников. Отображение в консоли списка воинов в армии игрока, количество их жизней, урона, наличие улучшений, и всё то же самое для противоположной команды(армии). и тд

To be continued...

ИНФОРМАЦИЯ ВЫШЕ УСТАРЕЛА! В САМОМ ПРОЕКТЕ НЕПЛОХАЯ ДОКУМЕНТАЦИЯ. ПОТОМ УЖЕ СДЕЛАЮ UML, КОГДА ПОЛНОСТЬЮ РАЗБЕРУСЬ КАК ЕГО ДЕЛАТЬ.
